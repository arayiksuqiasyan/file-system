{"version":3,"sources":["redux/projectReducer/projectReducer.tsx","componet/BreadCramps.tsx","componet/NavBarList.tsx","pages/index.ts","App.tsx","reportWebVitals.ts","redux/store.tsx","index.tsx"],"names":["counterSlice","createSlice","name","initialState","files","value","menuTitle","isOpen","reducers","addFiles","state","action","payload","changeInputValue","editTodoTitle","newFiles","map","file","id","saveTextFileHandler","newFile","find","valueTextArea","deleteFromBasket","filter","item","deleteFromHome","deleted","folderIconHandler","deleteIconsHandler","slice","backToBasketHandler","changeHistoryText","idx","deleteAlert","actions","BreadCramps","changeHistoryTextHandler","useSelector","counter","index","to","onClick","className","title","NavBarList","useState","inputValue","setInputValue","history","useHistory","dispatch","useDispatch","useEffect","unsubscribe","listen","location","addNewFile","completed","fined","pathname","parentId","newObj","Date","now","goBackHandler","isAll","push","goBack","Input","color","onChange","e","target","changeValue","Button","variant","endIcon","Icon","startIcon","Alert","severity","HomePage","lazy","SubPage","TextPage","BasketPage","App","path","component","fallback","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","ReactDOM","render","store","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0b940fc.chunk.js","sourcesContent":["import {tState} from \"../../project-golbal-type\";\nimport {createSlice} from '@reduxjs/toolkit'\n\nconst initialState: tState = {\n    files: [],\n    value: \"\",\n    menuTitle: [],\n    isOpen: false,\n}\n\nexport const counterSlice = createSlice({\n    name: 'counter',\n    initialState,\n    reducers: {\n\n        addFiles(state, action) {\n            state.files = [...state.files, action.payload]\n        },\n\n        changeInputValue(state, action) {\n            state.value = action.payload\n        },\n\n        editTodoTitle(state, action) {\n            const newFiles = state.files.map((file) => {\n                if (action.payload.id === file.id) {\n                    return action.payload\n                }\n                return file\n            })\n            state.files = [...newFiles]\n        },\n\n        saveTextFileHandler(state, action: { payload: { id: string | number, value: string } }) {\n            const newFile = state.files.find((file) => file.id === +action.payload.id)\n            if (newFile) {\n                newFile.valueTextArea = action.payload.value\n            } else {\n                return state\n            }\n        },\n\n        deleteFromBasket(state, action) {\n            state.files = state.files.filter((item) => item.id !== action.payload)\n        },\n\n        deleteFromHome(state, action) {\n            state.files = state.files.map((item) => {\n                if (item.id === action.payload) {\n                    return {\n                        ...item,\n                        deleted: true\n                    }\n                }\n                return item\n            })\n\n        },\n\n        folderIconHandler(state, action) {\n            state.menuTitle = [...state.menuTitle, action.payload]\n        },\n\n        deleteIconsHandler(state, action) {\n            if (action.payload) {\n                state.menuTitle = []\n            } else {\n                state.menuTitle = state.menuTitle.slice(0, -1)\n            }\n        },\n\n        backToBasketHandler(state, action) {\n            state.files = state.files.map((file) => {\n                if (file.id === action.payload) {\n                    return {\n                        ...file,\n                        deleted: false\n                    }\n                }\n                return file\n            })\n\n        },\n\n        changeHistoryText(state, action) {\n            const files = state.menuTitle.filter((item: any, idx: any) => {\n                return idx < action.payload\n            })\n            state.menuTitle = [...files]\n        },\n\n        deleteAlert(state, action) {\n            state.isOpen = action.payload\n        }\n\n\n    },\n})\nexport const {\n    addFiles, changeInputValue, editTodoTitle,\n    saveTextFileHandler, deleteFromHome, deleteFromBasket,\n    deleteIconsHandler, folderIconHandler, backToBasketHandler,\n    changeHistoryText, deleteAlert\n} = counterSlice.actions\n\nexport default counterSlice.reducer","import React from \"react\";\n\nimport {Link} from \"react-router-dom\";\nimport {useSelector} from \"react-redux\";\nimport {RootState} from \"../redux/store\";\n\ntype tBreadCramps = {\n    changeHistoryTextHandler: (index:number)=> void\n}\n\nfunction BreadCramps ({changeHistoryTextHandler}:tBreadCramps){\n\n    const {menuTitle} = useSelector((state: RootState) => state.counter)\n\n    return (\n        <div>\n            {menuTitle.map((item, index) => {\n                if (!item.id) {\n                    return <Link key={index} to={\"/\"}\n                                 onClick={() => changeHistoryTextHandler(index)}\n                                 className=\"link-h1\">{item.title}/\n                    </Link>\n                } else {\n                    return <Link key={index} to={`/file/${item.id}`}\n                                 onClick={() => changeHistoryTextHandler(index)}\n                                 className=\"link-h1\">{item.title}/\n                    </Link>\n                }\n            })}\n        </div>\n    )\n\n}\nexport default BreadCramps","import React, {ChangeEvent, useEffect, useState} from \"react\";\nimport {Input, Icon, Button} from '@material-ui/core';\nimport {useSelector, useDispatch} from \"react-redux\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {useHistory} from \"react-router-dom\";\nimport Alert from '@material-ui/lab/Alert';\n\nimport {tInputValue,tNewFile} from \"../project-golbal-type\";\nimport {tFile} from \"../project-golbal-type\";\nimport {RootState} from \"../redux/store\";\nimport BreadCramps from \"./BreadCramps\";\nimport {\n    changeInputValue,\n    addFiles,\n    deleteIconsHandler,\n    changeHistoryText,\n    deleteAlert,\n} from \"../redux/projectReducer/projectReducer\";\n\nfunction NavBarList() {\n    const [inputValue, setInputValue] = useState(\"\")\n\n    const history = useHistory()\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const unsubscribe = history.listen(location => {\n            if (history.action === 'POP') {\n                dispatch(deleteIconsHandler(false))\n            }\n        })\n\n        return () => {\n            unsubscribe()\n        }\n\n    }, [])\n\n    const {files, value, isOpen} = useSelector((state: RootState) => state.counter)\n\n    const addNewFile: tNewFile = (completed) => {\n        if (value !== \"\") {\n            const fined = files.find((item) => item.title === inputValue)\n            if (fined && history.location.pathname.slice(6) === fined.parentId) {\n                dispatch(deleteAlert(true))\n\n            } else {\n                const newObj: tFile = {\n                    id: Date.now(),\n                    title: value,\n                    completed: completed,\n                    parentId: history.location.pathname.slice(6),\n                    valueTextArea: \"\",\n                    deleted: false,\n\n                }\n                dispatch((addFiles(newObj)))\n                dispatch((changeInputValue(\"\")))\n                dispatch(deleteAlert(false))\n\n            }\n        }\n    }\n\n    const changeValue: tInputValue = (e) => {\n        dispatch(changeInputValue(e.target.value))\n    }\n\n\n    const goBackHandler: (isAll?: boolean) => void = (isAll) => {\n        if (isAll) {\n            history.push(\"/\")\n            dispatch(deleteIconsHandler(true))\n        } else {\n            history.goBack()\n        }\n    }\n\n    const changeHistoryTextHandler: (index: number) => void = (index) => {\n        dispatch(changeHistoryText(index))\n    }\n\n    return (\n        <div>\n            <div className=\"NavBarList\">\n                <span\n                    onClick={() => goBackHandler()}\n                >\n                    <i className=\"fas fa-angle-left\"/>\n                </span>\n                <span\n                    onClick={() => goBackHandler(true)}\n                >\n                    <i className=\"fas fa-angle-double-left\"/>\n                </span>\n                <Input\n                    value={value}\n                    color={\"primary\"}\n                    onChange={(e: ChangeEvent<HTMLInputElement>) => {\n                        setInputValue(e.target.value)\n                        changeValue(e)\n                    }}/>\n                <Button\n                    color=\"primary\"\n                    onClick={() => addNewFile(true)}\n                    variant=\"contained\"\n                    endIcon={<Icon>send</Icon>}\n                >\n                    ADD NEW FOLDER\n                </Button>\n                <Button variant=\"outlined\" color=\"default\"\n                        onClick={() => addNewFile(false)}>\n                    ADD NEW FILE\n                </Button>\n                <Button\n                    onClick={() => history.push(\"/basket\")}\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    startIcon={<DeleteIcon/>}\n                >\n                    BASKET\n                </Button>\n            </div>\n            <div className=\"menu-title\">\n                <h1 className=\"titleMenuForPages\">Files/</h1>\n                <BreadCramps\n                    changeHistoryTextHandler={changeHistoryTextHandler}\n                />\n            </div>\n            {isOpen && <Alert severity=\"error\">одинаковые имя</Alert>}\n        </div>\n    );\n}\n\nexport default NavBarList\n","import {lazy} from \"react\";\n\nexport const HomePage = lazy(()=>import(\"./home\"))\nexport const SubPage = lazy(()=>import(\"./sub\"))\nexport const TextPage = lazy(()=>import(\"./text\"))\nexport const BasketPage = lazy(()=>import(\"./deleted\"))","import React, {Suspense} from 'react';\nimport NavBarList from \"./componet/NavBarList\";\nimport {BrowserRouter, HashRouter, Route, Switch} from \"react-router-dom\"\nimport {BasketPage, HomePage, SubPage, TextPage} from \"./pages\";\n\n\nfunction App() {\n    return (\n        <HashRouter>\n            <div className=\"App\">\n                <Route path={\"/\"} component={NavBarList}/>\n                <Suspense fallback={<></>}>\n                    <Switch>\n                        <Route path={\"/\"} exact component={HomePage}/>\n                        <Route path={'/file/:id/'} component={SubPage}/>\n                        <Route path={'/text/:id/'} component={TextPage}/>\n                        <Route path={'/basket'} component={BasketPage}/>\n                    </Switch>\n                </Suspense>\n            </div>\n\n        </HashRouter>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\nimport counter from './projectReducer/projectReducer'\nimport  type {tState} from \"../project-golbal-type\";\n\nexport default configureStore({\n    reducer: {\n        counter,\n    },\n})\n\nexport type RootState = {\n    counter:tState\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n    <Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n    </Provider>,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}